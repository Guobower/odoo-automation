---
  - name: Run an Update Odoo Instalation
    hosts: desenvolvimento,producao
    become: yes
    pre_tasks:
      - name: 'Install python-psycopg2'
        become: true
        become_user: root
        raw: apt-get -y install python-psycopg2 python-pip
    vars:
      pg_user: "odoo_10"
      odoo_port: 8050
      pg_password: "{{ lookup('password', '~/ansible/postgres-password chars=ascii_letters,digits') }}"
      server_admin_password: "{{ lookup('password', '~/ansible/server-password chars=ascii_letters,digits') }}"
      user_odoo_password: "{{ lookup('password', '~/ansible/odoo-user-password chars=ascii_letters,digits') }}"

    vars_prompt:
      - name: "module_update"
        prompt: "Digite o modulo a atualizar"
        private: no

    tasks:
      - name: Install correct version docker-py to avoid problems
        pip: name=docker-py version=1.9.0
      - name: Check the odoo postgres user has the same password
        become: yes
        become_user: postgres
        postgresql_user:
          name: "{{ pg_user }}"
          password: "{{ pg_password }}"
          role_attr_flags: CREATEDB,NOSUPERUSER
          state: present
          port: "{{ pg_port }}"
      - name: Create DB (if necessary)
        become: yes
        become_user: postgres
        postgresql_db:
            name: "{{ item }}"
            owner: "{{ pg_user }}"
            state: present
            template: "template0"
            port: "{{ pg_port }}"
        register: dbstatus
        with_items: "{{ databases }}"

      - name: Atualiza a imagem do Odoo
        become: yes
        become_user: odoo
        docker_image:
          name: trustcode/docker-odoo
          force: yes

      - name: Deleta o docker odoo de update
        become: yes
        become_user: odoo
        docker_container:
          name: "trustcode-update-odoo-{{ item }}"
          state: absent
        with_items: "{{ databases }}"

      - name: Inicia o docker odoo e inicializa a base de dados
        become: yes
        become_user: odoo
        command: "docker run --name trustcode-update-odoo-{{ item }} --net host trustcode/docker-odoo /usr/bin/odoo-server -c /etc/odoo/odoo.conf -d {{ item }} -i br_base -r {{ pg_user }} -w {{ pg_password }} --without-demo=all --stop-after-init"
        when: dbstatus.changed
        with_items: "{{ databases }}"

      - name: Inicia o docker odoo em modo atualizacao
        become: yes
        become_user: odoo
        command: "docker run --name trustcode-update-odoo-{{ item }} --net host trustcode/docker-odoo /usr/bin/odoo-server -c /etc/odoo/odoo.conf -d {{ item }} -u {{ module_update }} -r {{ pg_user }} -w {{ pg_password }} --without-demo=all --stop-after-init"
        when: module_update != "" and not dbstatus.changed
        with_items: "{{ databases }}"

      - name: Cria a pasta dados
        become: yes
        become_user: root
        file: path=/opt/dados state=directory mode=0755 owner=odoo

      - name: Recria o docker odoo
        become: yes
        become_user: odoo
        docker_container:
          name: trustcode-odoo
          image: trustcode/docker-odoo
          network_mode: host
          restart: yes
          state: started
          recreate: yes
          volumes:
            - "/opt/dados:/opt/dados"
          env:
            PG_USER: "{{ pg_user }}"
            PG_PASSWORD: "{{ pg_password }}"
            PORT: "{{ odoo_port }}"

      - name: Modifica a senha padrão
        become: yes
        become_user: odoo
        command: "docker exec -u root trustcode-odoo sed -i 's/senha_admin/{{ server_admin_password }}/' /etc/odoo/odoo.conf"
        when: inventory_hostname in groups['producao']

      - name: Adicionando dbfilter ao arquivo de configuração
        become: yes
        become_user: odoo
        command: docker exec -u root trustcode-odoo bash -c "echo 'dbfilter = ^%d' >> /etc/odoo/odoo.conf"
        when: inventory_hostname in groups['trustcode']

      - name: Reinicia o odoo via supervisor para pegar nova senha
        become: yes
        become_user: odoo
        command: "docker exec trustcode-odoo supervisorctl restart odoo"
        when: inventory_hostname in groups['producao']

      - name: Nginx | Criar configuracao
        template:
          src: "nginx.j2"
          dest: "/etc/nginx/sites-available/{{ item }}"
          owner: root
          group: root
          mode: 0755
        with_items: "{{ databases }}"
        when: inventory_hostname in groups['producao']

      - name: Nginx | Link para habilitar o site
        file:
          src: "/etc/nginx/sites-available/{{ item }}"
          dest: "/etc/nginx/sites-enabled/{{ item }}"
          state: link
        with_items: "{{ databases }}"
        when: inventory_hostname in groups['producao']

      - name: Nginx | Assegurar que Nginx esta instalado (package)
        service:
          name: nginx
          state: restarted
        when: inventory_hostname in groups['producao']
